<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('JtMarathonResults', 'doctrine');

/**
 * BaseJtMarathonResults
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $year
 * @property string $city
 * @property string $event_name
 * @property integer $overall_place
 * @property integer $age_group_place
 * @property integer $gender_place
 * @property string $half_split
 * @property string $net_finish_time
 * @property string $avg_pace
 * @property string $notes
 * 
 * @method integer           getid()              Returns the current record's "id" value
 * @method string            getyear()            Returns the current record's "year" value
 * @method string            getcity()            Returns the current record's "city" value
 * @method string            getevent_name()      Returns the current record's "event_name" value
 * @method integer           getoverall_place()   Returns the current record's "overall_place" value
 * @method integer           getage_group_place() Returns the current record's "age_group_place" value
 * @method integer           getgender_place()    Returns the current record's "gender_place" value
 * @method string            gethalf_split()      Returns the current record's "half_split" value
 * @method string            getnet_finish_time() Returns the current record's "net_finish_time" value
 * @method string            getavg_pace()        Returns the current record's "avg_pace" value
 * @method string            getnotes()           Returns the current record's "notes" value
 * @method JtMarathonResults setid()              Sets the current record's "id" value
 * @method JtMarathonResults setyear()            Sets the current record's "year" value
 * @method JtMarathonResults setcity()            Sets the current record's "city" value
 * @method JtMarathonResults setevent_name()      Sets the current record's "event_name" value
 * @method JtMarathonResults setoverall_place()   Sets the current record's "overall_place" value
 * @method JtMarathonResults setage_group_place() Sets the current record's "age_group_place" value
 * @method JtMarathonResults setgender_place()    Sets the current record's "gender_place" value
 * @method JtMarathonResults sethalf_split()      Sets the current record's "half_split" value
 * @method JtMarathonResults setnet_finish_time() Sets the current record's "net_finish_time" value
 * @method JtMarathonResults setavg_pace()        Sets the current record's "avg_pace" value
 * @method JtMarathonResults setnotes()           Sets the current record's "notes" value
 * 
 * @package    jtweb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseJtMarathonResults extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('JtMarathonResults');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('year', 'string', 11, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 11,
             ));
        $this->hasColumn('city', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('event_name', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('overall_place', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('age_group_place', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('gender_place', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('half_split', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('net_finish_time', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('avg_pace', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('notes', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}