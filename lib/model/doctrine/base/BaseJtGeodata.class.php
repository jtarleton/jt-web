<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('JtGeodata', 'doctrine');

/**
 * BaseJtGeodata
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $geoip_addr
 * @property string $geoip_continent_code
 * @property string $geoip_country_code
 * @property string $geoip_country_name
 * @property string $geoip_city
 * @property string $geoip_region
 * @property string $geoip_region_name
 * @property string $geoip_dma_code
 * @property string $geoip_metro_code
 * @property string $geoip_area_code
 * @property float $geoip_latitude
 * @property float $geoip_longitude
 * 
 * @method integer   get()                     Returns the current record's "id" value
 * @method string    get()                     Returns the current record's "geoip_addr" value
 * @method string    get()                     Returns the current record's "geoip_continent_code" value
 * @method string    get()                     Returns the current record's "geoip_country_code" value
 * @method string    get()                     Returns the current record's "geoip_country_name" value
 * @method string    get()                     Returns the current record's "geoip_city" value
 * @method string    get()                     Returns the current record's "geoip_region" value
 * @method string    get()                     Returns the current record's "geoip_region_name" value
 * @method string    get()                     Returns the current record's "geoip_dma_code" value
 * @method string    get()                     Returns the current record's "geoip_metro_code" value
 * @method string    get()                     Returns the current record's "geoip_area_code" value
 * @method float     get()                     Returns the current record's "geoip_latitude" value
 * @method float     get()                     Returns the current record's "geoip_longitude" value
 * @method JtGeodata set()                     Sets the current record's "id" value
 * @method JtGeodata set()                     Sets the current record's "geoip_addr" value
 * @method JtGeodata set()                     Sets the current record's "geoip_continent_code" value
 * @method JtGeodata set()                     Sets the current record's "geoip_country_code" value
 * @method JtGeodata set()                     Sets the current record's "geoip_country_name" value
 * @method JtGeodata set()                     Sets the current record's "geoip_city" value
 * @method JtGeodata set()                     Sets the current record's "geoip_region" value
 * @method JtGeodata set()                     Sets the current record's "geoip_region_name" value
 * @method JtGeodata set()                     Sets the current record's "geoip_dma_code" value
 * @method JtGeodata set()                     Sets the current record's "geoip_metro_code" value
 * @method JtGeodata set()                     Sets the current record's "geoip_area_code" value
 * @method JtGeodata set()                     Sets the current record's "geoip_latitude" value
 * @method JtGeodata set()                     Sets the current record's "geoip_longitude" value
 * 
 * @package    jtweb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseJtGeodata extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('JtGeodata');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('geoip_addr', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('geoip_continent_code', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('geoip_country_code', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('geoip_country_name', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('geoip_city', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('geoip_region', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('geoip_region_name', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('geoip_dma_code', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('geoip_metro_code', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('geoip_area_code', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('geoip_latitude', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('geoip_longitude', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}