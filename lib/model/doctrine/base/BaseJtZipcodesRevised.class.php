<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('JtZipcodesRevised', 'doctrine');

/**
 * BaseJtZipcodesRevised
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $zip
 * @property string $city
 * @property string $state
 * @property float $latitude
 * @property float $longitude
 * @property integer $timezone
 * @property integer $dst
 * @property string $name
 * @property string $countrycode
 * @property string $district
 * @property integer $population
 * 
 * @method integer           get()            Returns the current record's "id" value
 * @method string            get()            Returns the current record's "zip" value
 * @method string            get()            Returns the current record's "city" value
 * @method string            get()            Returns the current record's "state" value
 * @method float             get()            Returns the current record's "latitude" value
 * @method float             get()            Returns the current record's "longitude" value
 * @method integer           get()            Returns the current record's "timezone" value
 * @method integer           get()            Returns the current record's "dst" value
 * @method string            get()            Returns the current record's "name" value
 * @method string            get()            Returns the current record's "countrycode" value
 * @method string            get()            Returns the current record's "district" value
 * @method integer           get()            Returns the current record's "population" value
 * @method JtZipcodesRevised set()            Sets the current record's "id" value
 * @method JtZipcodesRevised set()            Sets the current record's "zip" value
 * @method JtZipcodesRevised set()            Sets the current record's "city" value
 * @method JtZipcodesRevised set()            Sets the current record's "state" value
 * @method JtZipcodesRevised set()            Sets the current record's "latitude" value
 * @method JtZipcodesRevised set()            Sets the current record's "longitude" value
 * @method JtZipcodesRevised set()            Sets the current record's "timezone" value
 * @method JtZipcodesRevised set()            Sets the current record's "dst" value
 * @method JtZipcodesRevised set()            Sets the current record's "name" value
 * @method JtZipcodesRevised set()            Sets the current record's "countrycode" value
 * @method JtZipcodesRevised set()            Sets the current record's "district" value
 * @method JtZipcodesRevised set()            Sets the current record's "population" value
 * 
 * @package    jtweb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseJtZipcodesRevised extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('JtZipcodesRevised');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('zip', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('city', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('state', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('latitude', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('longitude', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('timezone', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('dst', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 35, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 35,
             ));
        $this->hasColumn('countrycode', 'string', 3, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('district', 'string', 20, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('population', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}