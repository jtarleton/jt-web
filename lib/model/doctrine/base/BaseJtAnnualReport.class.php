<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('JtAnnualReport', 'doctrine');

/**
 * BaseJtAnnualReport
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $year
 * @property float $gross_earnings
 * @property float $fixed_expenses
 * @property float $total_spend
 * @property float $fed_taxes
 * @property float $state_taxes
 * @property float $city_taxes
 * @property float $retirement_savings
 * @property float $cc_balance_start
 * @property float $cc_balance_end
 * @property float $cc_balance_diff
 * @property string $summary
 * 
 * @method integer        getid()                 Returns the current record's "id" value
 * @method integer        getyear()               Returns the current record's "year" value
 * @method float          getgross_earnings()     Returns the current record's "gross_earnings" value
 * @method float          getfixed_expenses()     Returns the current record's "fixed_expenses" value
 * @method float          gettotal_spend()        Returns the current record's "total_spend" value
 * @method float          getfed_taxes()          Returns the current record's "fed_taxes" value
 * @method float          getstate_taxes()        Returns the current record's "state_taxes" value
 * @method float          getcity_taxes()         Returns the current record's "city_taxes" value
 * @method float          getretirement_savings() Returns the current record's "retirement_savings" value
 * @method float          getcc_balance_start()   Returns the current record's "cc_balance_start" value
 * @method float          getcc_balance_end()     Returns the current record's "cc_balance_end" value
 * @method float          getcc_balance_diff()    Returns the current record's "cc_balance_diff" value
 * @method string         getsummary()            Returns the current record's "summary" value
 * @method JtAnnualReport setid()                 Sets the current record's "id" value
 * @method JtAnnualReport setyear()               Sets the current record's "year" value
 * @method JtAnnualReport setgross_earnings()     Sets the current record's "gross_earnings" value
 * @method JtAnnualReport setfixed_expenses()     Sets the current record's "fixed_expenses" value
 * @method JtAnnualReport settotal_spend()        Sets the current record's "total_spend" value
 * @method JtAnnualReport setfed_taxes()          Sets the current record's "fed_taxes" value
 * @method JtAnnualReport setstate_taxes()        Sets the current record's "state_taxes" value
 * @method JtAnnualReport setcity_taxes()         Sets the current record's "city_taxes" value
 * @method JtAnnualReport setretirement_savings() Sets the current record's "retirement_savings" value
 * @method JtAnnualReport setcc_balance_start()   Sets the current record's "cc_balance_start" value
 * @method JtAnnualReport setcc_balance_end()     Sets the current record's "cc_balance_end" value
 * @method JtAnnualReport setcc_balance_diff()    Sets the current record's "cc_balance_diff" value
 * @method JtAnnualReport setsummary()            Sets the current record's "summary" value
 * 
 * @package    jtweb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseJtAnnualReport extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('JtAnnualReport');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 8,
             ));
        $this->hasColumn('year', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('gross_earnings', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('fixed_expenses', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('total_spend', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('fed_taxes', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('state_taxes', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('city_taxes', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('retirement_savings', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('cc_balance_start', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('cc_balance_end', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('cc_balance_diff', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('summary', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}